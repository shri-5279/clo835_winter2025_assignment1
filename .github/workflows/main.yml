name: Deploy to ECR
on: 
  push:
    branches: [ development ]

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        aws-region: us-east-1

    - name: Build, tag, and push images to Amazon ECR
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        WEBAPP_REPO: webapp/my_app
        DB_REPO: webapp/my_db
        IMAGE_TAG: v0.1
      run: |
        export AWS_REGION=us-east-1
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        export AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}

        echo "Building and pushing Web App image..."
        docker build -t $ECR_REGISTRY/$WEBAPP_REPO:$IMAGE_TAG -f Dockerfile .
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker push $ECR_REGISTRY/$WEBAPP_REPO:$IMAGE_TAG

        echo "Building and pushing Database image..."
        docker build -t $ECR_REGISTRY/$DB_REPO:$IMAGE_TAG -f Dockerfile_mysql .
        docker push $ECR_REGISTRY/$DB_REPO:$IMAGE_TAG